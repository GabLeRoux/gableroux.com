<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>GabLeRoux &lt;Developer&gt;</title>
    <description>Personal site about code, ideas, technologies and anything else. I like to write python and work on crazy projects, read my stuff!
</description>
    <link>http://gableroux.com/</link>
    <atom:link href="http://gableroux.com/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Tue, 02 Feb 2016 13:07:55 -0500</pubDate>
    <lastBuildDate>Tue, 02 Feb 2016 13:07:55 -0500</lastBuildDate>
    <generator>Jekyll v3.0.2</generator>
    
      <item>
        <title>More than a year later, what&#39;s up?</title>
        <description>&lt;p&gt;Hey there,&lt;br /&gt;
This site is still &lt;em&gt;maintained&lt;/em&gt;! I was running my personal site on &lt;a href=&quot;http://blog.getpelican.com/&quot;&gt;pelican&lt;/a&gt; and I just decided to move to &lt;a href=&quot;http://jekyllrb.com&quot;&gt;jekyll&lt;/a&gt;, it’s more popular and easier to maintain.&lt;/p&gt;

&lt;!-- more --&gt;

&lt;h2 id=&quot;why-jekyll&quot;&gt;Why jekyll?&lt;/h2&gt;

&lt;p&gt;I had a small anoying problem with Pelican’s assets plugin and didn’t want to put time on fixing this, I spent some time on this and then I told myself:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Ok I’ll continue writing on my blog when it’s fixed…&lt;/p&gt;

  &lt;p&gt;&lt;img src=&quot;/images/memes/ahah-good-one.jpg&quot; alt=&quot;Ahah good one&quot; /&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Switching to an other static site generator ended up being &lt;strong&gt;way faster&lt;/strong&gt; than playing with my old code. Yeah, I’m a bit lazy, &lt;a href=&quot;http://www.goodreads.com/quotes/568877-i-choose-a-lazy-person-to-do-a-hard-job&quot;&gt;that makes good programers right?&lt;/a&gt;. :)&lt;/p&gt;

&lt;p&gt;Now that everything is ok, I’ll follow &lt;a href=&quot;https://www.staticgen.com/jekyll&quot;&gt;jekyll’s Philosophy&lt;/a&gt;;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Put simply, Jekyll gets out of your way and allows you to concentrate on what truly matters: your content.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;whats-new&quot;&gt;What’s new?&lt;/h2&gt;

&lt;p&gt;Since my last post (more than a year ago), a lot happened! These are some key points:&lt;/p&gt;

&lt;h3 id=&quot;tlmtlm&quot;&gt;&lt;a href=&quot;http://solutionstlm.com/&quot;&gt;TLM&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;I started working with a great team at a nice place where I write code, fix problems and close &lt;a href=&quot;https://www.atlassian.com/software/jira&quot;&gt;Jira&lt;/a&gt; issues. People often ask me what we do at TLM, so in a nutshell; websites, webapps, mobile apps and way more. TLM has it’s own &lt;a href=&quot;https://en.wikipedia.org/wiki/Enterprise_resource_planning&quot;&gt;ERP software&lt;/a&gt;: &lt;a href=&quot;http://www.tlmdesign.ca/fr/unites-affaires/systemes/solutions-s6&quot;&gt;S6&lt;/a&gt; and we worked on a car starting app once and that was pretty cool ;)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/tlm/happygableroux-at-tlm.jpg&quot; alt=&quot;GabLeRoux at TLM&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;saglac-iosaglacio&quot;&gt;&lt;a href=&quot;http://saglac.io/&quot;&gt;SagLac IO&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;I gave a few presentations at the  about awesome subjects such as Coffeescript, &lt;a href=&quot;/todo&quot;&gt;HUBOT - Improve and reduce employee efficiency&lt;/a&gt; and &lt;a href=&quot;2015/06/03/saltstack-saglacio.html&quot;&gt;SaltStack&lt;/a&gt;. I’ll keep sharing my presentations on my website.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://saglac.io/&quot;&gt;&lt;img src=&quot;/images/saglacio/saglacio.jpg&quot; alt=&quot;SagLacIO&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;totema-studiototemastudio&quot;&gt;&lt;a href=&quot;http://totemastudio.com/&quot;&gt;Totema Studio&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;I started a partnership with some firends, an independent video game Studio where I build awesome games with very talented people.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://totemastudio.com/&quot;&gt;&lt;img src=&quot;/images/totemastudio-cover.jpg&quot; alt=&quot;Totema Studio&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;arcade-side-project&quot;&gt;Arcade side project&lt;/h3&gt;

&lt;p&gt;I got myself a personal Arcade Stand (a ticket vending machine in a previous life) with a color touchscreen. It’s waiting for an X-Arcade controller right now, but this is going to be fun.&lt;/p&gt;

&lt;h3 id=&quot;gablerouxcom-is-back-to-life&quot;&gt;GabLeRoux.com is back to life&lt;/h3&gt;

&lt;p&gt;I “fixed” my website!&lt;/p&gt;

&lt;p&gt;Been a buzzy year eh.
Next post will probably be about the great LetsEncrypt that provides https certificates for free, stay tuned!&lt;/p&gt;

</description>
        <pubDate>Tue, 02 Feb 2016 12:00:00 -0500</pubDate>
        <link>http://gableroux.com/jekyll/update/2016/02/02/whats-up.html</link>
        <guid isPermaLink="true">http://gableroux.com/jekyll/update/2016/02/02/whats-up.html</guid>
        
        
        <category>jekyll</category>
        
        <category>update</category>
        
      </item>
    
      <item>
        <title>Hubot presentation at the SagLacIO</title>
        <description>&lt;p&gt;I gave a presentation at the &lt;a href=&quot;http://saglac.io&quot;&gt;SagLacIO&lt;/a&gt; about &lt;a href=&quot;https://hubot.github.com/&quot;&gt;Hubot&lt;/a&gt;. Here are the slides.&lt;/p&gt;

&lt;!-- more --&gt;

&lt;iframe src=&quot;https://docs.google.com/presentation/d/12mfmFRzwQ6WG_DSRR4ktEjU7LHmA3XFemhYaNdYswQA/embed?start=false&amp;amp;loop=false&amp;amp;delayms=3000&quot; frameborder=&quot;0&quot; width=&quot;960&quot; height=&quot;749&quot; allowfullscreen=&quot;true&quot; mozallowfullscreen=&quot;true&quot; webkitallowfullscreen=&quot;true&quot;&gt;&lt;/iframe&gt;

</description>
        <pubDate>Wed, 28 Oct 2015 19:00:00 -0400</pubDate>
        <link>http://gableroux.com/presentation/2015/10/28/hubot-saglacio.html</link>
        <guid isPermaLink="true">http://gableroux.com/presentation/2015/10/28/hubot-saglacio.html</guid>
        
        <category>saglacio</category>
        
        <category>hubot</category>
        
        
        <category>presentation</category>
        
      </item>
    
      <item>
        <title>Install redmine on centos 7</title>
        <description>&lt;p&gt;A colleague had to install [redmine][redmine] once and I gave this a look. Turns out [redmine documentation for centos] is getting old, we gave a try and wow, this is not as easy as it seems.&lt;/p&gt;

&lt;!-- more --&gt;

&lt;p&gt;If you are here because you want to install redmine from scratch, I really suggest you use something like the &lt;a href=&quot;https://www.digitalocean.com/community/tutorials/how-to-use-the-digitalocean-one-click-install-redmine-on-ubuntu-14-04-image&quot;&gt;one click digital ocean image&lt;/a&gt;, it will take you 5 minutes and you’ll be done.&lt;/p&gt;

&lt;h2 id=&quot;still-there&quot;&gt;Still there?&lt;/h2&gt;

&lt;p&gt;Close your eyes, this will be ugly.&lt;/p&gt;

&lt;h2 id=&quot;redmine-installation-on-cemtos-7&quot;&gt;Redmine installation on CemtOS 7&lt;/h2&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;sudo apt-get install redmine redmine-mysql mysql-server -y&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;You should use mariadb instead of mysql for &lt;a href=&quot;https://seravo.fi/2015/10-reasons-to-migrate-to-mariadb-if-still-using-mysql&quot;&gt;the following 10 reasons&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Install apache2 (haven’t tried with nginx here, its usually better than apache, but not covered here sorry)&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;sudo apt-get install apache2 libapache2-mod-passenger -y
sudo cp /usr/share/doc/redmine/examples/apache2-passenger-host.conf /etc/apache2/sites-available/

gem install bundler&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;customize-apache2-passenger-hostconf-listen-80&quot;&gt;Customize apache2-passenger-host.conf (listen 80)&lt;/h2&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;vim /etc/apache2/sites-available/apache2-passenger-host.conf&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Have a look to its content and comment, if you’re new to this, don’t edit ;)&lt;/p&gt;

&lt;h2 id=&quot;edit-passenger-conf&quot;&gt;Edit passenger conf&lt;/h2&gt;

&lt;p&gt;Add &lt;code class=&quot;highlighter-rouge&quot;&gt;PassengerDefaultUser www-data&lt;/code&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;passenger.conf&lt;/code&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;vim /etc/apache2/mods-available/passenger.conf&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;customize-apache2conf-nameserver&quot;&gt;Customize apache2.conf (NameServer)&lt;/h2&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;vim /etc/apache2/apache2.conf

sudo ln -sf /usr/share/redmine /var/lib/redmine/default/passenger
sudo a2ensite apache2-passenger-host.conf
sudo service apache2 reload&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Almost done.&lt;/p&gt;
</description>
        <pubDate>Thu, 01 Oct 2015 18:00:00 -0400</pubDate>
        <link>http://gableroux.com/redmine/application/howto/2015/10/01/install-redmine.html</link>
        <guid isPermaLink="true">http://gableroux.com/redmine/application/howto/2015/10/01/install-redmine.html</guid>
        
        
        <category>redmine</category>
        
        <category>application</category>
        
        <category>howto</category>
        
      </item>
    
      <item>
        <title>Python interpreter autocomplete + history with ~/.pythonrc</title>
        <description>&lt;p&gt;Using great tools is great, using autocompletion with great tools is even better!&lt;/p&gt;

&lt;!-- more --&gt;

&lt;h2 id=&quot;ever-used-python-interpreter&quot;&gt;Ever used python interpreter?&lt;/h2&gt;

&lt;p&gt;You should, &lt;a href=&quot;https://www.python.org/downloads/&quot;&gt;install python&lt;/a&gt; if it’s not already the case and run &lt;code class=&quot;highlighter-rouge&quot;&gt;python&lt;/code&gt; in your terminal. Awesome, an interpreter!&lt;/p&gt;

&lt;h2 id=&quot;autocomplete&quot;&gt;Autocomplete&lt;/h2&gt;

&lt;p&gt;Yes that’s right, here is what you’re looking for. Create this file:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;~/.pythonrc&lt;/code&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;atexit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;readline&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;rlcompleter&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;readline&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;parse_and_bind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&#39;tab:complete&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;.pythonrc :: AutoCompletion Loaded&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# History&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;historyPath&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;expanduser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;~/.pyhistory&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;save_history&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;historyPath&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;historyPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;readline&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;readline&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;write_history_file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;historyPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;.pythonrc :: history saved to &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;historyPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;exists&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;historyPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;readline&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read_history_file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;historyPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;atexit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;register&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;save_history&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Then, you need to tell python interpreter to use this &lt;code class=&quot;highlighter-rouge&quot;&gt;~/.pythonrc&lt;/code&gt; file, so add the following line somewhere in an &lt;code class=&quot;highlighter-rouge&quot;&gt;rc&lt;/code&gt; file (either &lt;code class=&quot;highlighter-rouge&quot;&gt;~/.bashrc&lt;/code&gt; if you’re using &lt;a href=&quot;https://fr.wikipedia.org/wiki/Bourne-Again_shell&quot;&gt;bash&lt;/a&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;~/.zshrc&lt;/code&gt; for the awesome &lt;a href=&quot;https://github.com/robbyrussell/oh-my-zsh&quot;&gt;oh-my-zsh&lt;/a&gt;)&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PYTHONSTARTUP&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=~/.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pythonrc&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;You can also run this directly in your shell if you want to test before editing your rc file.&lt;/p&gt;

&lt;p&gt;That’s it, fire up a terminal, run &lt;code class=&quot;highlighter-rouge&quot;&gt;python&lt;/code&gt; again and enjoy autocompletion with tab.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/python-interpreter-autocompletion.png&quot; alt=&quot;pythonrc terminal example&quot; /&gt;&lt;/p&gt;

</description>
        <pubDate>Mon, 27 Jul 2015 11:00:00 -0400</pubDate>
        <link>http://gableroux.com/python/2015/07/27/python-interpreter-autocomplete.html</link>
        <guid isPermaLink="true">http://gableroux.com/python/2015/07/27/python-interpreter-autocomplete.html</guid>
        
        <category>dotfile history python pythonrc autocomplete</category>
        
        
        <category>python</category>
        
      </item>
    
      <item>
        <title>Y U NO GIT</title>
        <description>&lt;p&gt;&lt;a href=&quot;http://www.git.com&quot;&gt;Git&lt;/a&gt; is a must have tool for programmers known as &lt;em&gt;the stupid content tracker&lt;/em&gt;. Every programmer should learn to use it as soon as they can. Git could save a couple days and could even save your life (yep, git will save your life, it did with mine).&lt;/p&gt;

&lt;!-- more --&gt;

&lt;p&gt;I took many courses in Computer Science, some database courses where I learned to use Solaris and old stuff (seriously…). did some modelisation, algorithms, learned object oriented programming, learned OpenGL, hardcoded some &lt;a href=&quot;https://github.com/GabLeRoux/opengl-3d-molecules-hardecoded-xyz&quot;&gt;3d molecular thing with it&lt;/a&gt; also wrote an &lt;a href=&quot;https://github.com/GabLeRoux/IndustrialSoundsAndStuff&quot;&gt;audio visualizer&lt;/a&gt; in java etc. But there’s one thing I learned at school without a course, and that is &lt;strong&gt;git&lt;/strong&gt;. &lt;em&gt;Note: I enjoyed my courses, but I had to learn git by my own, not easy at first, though, really worth it.&lt;/em&gt;&lt;/p&gt;

&lt;h1 id=&quot;why-version-controlling&quot;&gt;Why version controlling&lt;/h1&gt;
&lt;p&gt;It’s not much about having &lt;em&gt;version numbers&lt;/em&gt; or anything, it’s just about &lt;em&gt;being able to work with others&lt;/em&gt;. Git is not just a version control application, it’s a collaboration tool. Did you know github currently has more than 2.7M code repositories available to public? This is a lot of code.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Don’t share code on dropbox again, don’t share code on a usb key, don’t even think about it&lt;/strong&gt;.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;but it works&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Saying dropbox works for code sharing is like saying &lt;a href=&quot;https://en.wikipedia.org/wiki/Bogosort&quot;&gt;bogosort&lt;/a&gt; is a good sorting algorithm.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;def bogo(data):
    while notInOrder(data):
        data = shuffle(data)
    return data
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;em&gt;tldr;&lt;/em&gt; let’s say you want to sort cards, you throw them all on the ground at the same time, you pick them up and check if they’re sorted. Repeat until cards are in order.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Alright, show me how to git&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Before we get started, let’s get familiar with some words I will be using:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;repository&lt;/code&gt;: The place where all the code, history and files will be stored&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;commit&lt;/code&gt;: An action from a programmer that says hey, I &lt;code class=&quot;highlighter-rouge&quot;&gt;modified&lt;/code&gt; these files, &lt;code class=&quot;highlighter-rouge&quot;&gt;added&lt;/code&gt; these,&lt;code class=&quot;highlighter-rouge&quot;&gt;deleted&lt;/code&gt; these and &lt;code class=&quot;highlighter-rouge&quot;&gt;renamed&lt;/code&gt; these.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;branch&lt;/code&gt;: They are like copies of your code inside the &lt;code class=&quot;highlighter-rouge&quot;&gt;repository&lt;/code&gt;. Default branch is named &lt;code class=&quot;highlighter-rouge&quot;&gt;master&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;remote&lt;/code&gt;: It is a place somewhere else where you can send your code. You may have more than one! You can have a production server, [Github][github], [bitbucket][bitbucket], your private [gitlab][gitlab] etc.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;getting-started&quot;&gt;Getting started&lt;/h2&gt;

&lt;p&gt;Fire up a terminal (learn it this way first so you know what’s going on behind the scene later). To create a new repository, &lt;code class=&quot;highlighter-rouge&quot;&gt;cd&lt;/code&gt; into your project and &lt;code class=&quot;highlighter-rouge&quot;&gt;git init .&lt;/code&gt;.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Initialized empty Git repository in /Users/gableroux/temp/random_stuff/.git/&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;A folder named &lt;code class=&quot;highlighter-rouge&quot;&gt;.git&lt;/code&gt; will be created. This folder contains all the informations, settings and history of the repository. Now run &lt;code class=&quot;highlighter-rouge&quot;&gt;git status&lt;/code&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;On branch master&lt;/p&gt;

  &lt;p&gt;Initial commit&lt;/p&gt;

  &lt;p&gt;nothing to commit (create/copy files and use “git add” to track)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;We see we’re on branch &lt;code class=&quot;highlighter-rouge&quot;&gt;master&lt;/code&gt;, we are at the first commit of this repository. Now what? They say create/copy files and use git add to track. It’s all about &lt;em&gt;tracking changes&lt;/em&gt;. For our example, we create a new file in the same directory. &lt;code class=&quot;highlighter-rouge&quot;&gt;touch hello.txt&lt;/code&gt;. This new file could be anything, now run &lt;code class=&quot;highlighter-rouge&quot;&gt;git status&lt;/code&gt; again. Here’s what we get&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;On branch master&lt;/p&gt;

  &lt;p&gt;Initial commit&lt;/p&gt;

  &lt;p&gt;Untracked files:
  (use “git add &lt;file&gt;...&quot; to include in what will be committed)&lt;/file&gt;&lt;/p&gt;

  &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;hello.txt
&lt;/code&gt;&lt;/pre&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;

&lt;p&gt;nothing added to commit but untracked files present (use “git add” to track)&lt;/p&gt;

&lt;p&gt;We are still on the Initial commit, there are &lt;code class=&quot;highlighter-rouge&quot;&gt;Untracked files&lt;/code&gt;, that means we can track them! As they say, let’s use &lt;code class=&quot;highlighter-rouge&quot;&gt;git add&lt;/code&gt;.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Nothing specified, nothing added.
Maybe you wanted to say ‘git add .’?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Oh so we need to specify something, ok boss, &lt;code class=&quot;highlighter-rouge&quot;&gt;git add hello.txt&lt;/code&gt;. You won’t get any output, but the command did work, run &lt;code class=&quot;highlighter-rouge&quot;&gt;git status&lt;/code&gt; and see what’s going on now.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;On branch master&lt;/p&gt;

  &lt;p&gt;Initial commit&lt;/p&gt;

  &lt;p&gt;Changes to be committed:
  (use “git rm –cached &lt;file&gt;...&quot; to unstage)&lt;/file&gt;&lt;/p&gt;

  &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;new file:   hello.txt
&lt;/code&gt;&lt;/pre&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;commit&quot;&gt;Commit&lt;/h3&gt;

&lt;p&gt;“Changes to be committed”, in other words, nothing is currently commited, we need to &lt;code class=&quot;highlighter-rouge&quot;&gt;commit&lt;/code&gt;, if we run &lt;code class=&quot;highlighter-rouge&quot;&gt;git commit&lt;/code&gt;, this will bring your default editor&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;2 # Please enter the commit message for your changes. Lines starting
3 # with ‘#’ will be ignored, and an empty message aborts the commit.
4 # On branch master
5 #
6 # Initial commit
7 #
8 # Changes to be committed:
9 #       new file:   hello.txt
10 #&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Simply write a message here, this message is used to described your changes, for example: “Added useless hello.txt file” could be all fine here. Now if you’re on linux, the editor that will open may be &lt;a href=&quot;http://www.vim.org&quot;&gt;vim&lt;/a&gt;, Search online for basic usage, but in short, ctrl+c gets you in command input mode, &lt;code class=&quot;highlighter-rouge&quot;&gt;i&lt;/code&gt; geets you in “insert mode” so to write text in vim, &lt;code class=&quot;highlighter-rouge&quot;&gt;ctrl+c&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;i&lt;/code&gt; type some text, &lt;code class=&quot;highlighter-rouge&quot;&gt;ctrl+c&lt;/code&gt; to get in command mode again, &lt;code class=&quot;highlighter-rouge&quot;&gt;:wq&lt;/code&gt; + enter. &lt;code class=&quot;highlighter-rouge&quot;&gt;w&lt;/code&gt; stands for write and &lt;code class=&quot;highlighter-rouge&quot;&gt;q&lt;/code&gt; stands for quit. Voilà, you just made a commit.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;[master (root-commit) 84c7af3] Added useless hello.txt file
1 file changed, 0 insertions(+), 0 deletions(-)
create mode 100644 hello.txt&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Note: you can skip the editor/vim part by prividing a parameter to git commit command: &lt;code class=&quot;highlighter-rouge&quot;&gt;git commit -m &quot;Added useless hello.txt file&quot;&lt;/code&gt;. The editor is still usefull when you do big changes with a lot of files where you want to describe the reasons for your changes. keep it straight to the point, people doesn’t read much.&lt;/p&gt;

&lt;h3 id=&quot;git-log&quot;&gt;git log&lt;/h3&gt;

&lt;p&gt;Ok so we’ve made a commit, what’s next?&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git log
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;commit 84c7af3fc886d80df2677a164ed667f3fbb4e17a
Author: Gabriel Le Breton &lt;a href=&quot;&amp;#109;&amp;#097;&amp;#105;&amp;#108;&amp;#116;&amp;#111;:&amp;#108;&amp;#101;&amp;#098;&amp;#114;&amp;#101;&amp;#116;&amp;#111;&amp;#110;&amp;#046;&amp;#103;&amp;#097;&amp;#098;&amp;#114;&amp;#105;&amp;#101;&amp;#108;&amp;#064;&amp;#103;&amp;#109;&amp;#097;&amp;#105;&amp;#108;&amp;#046;&amp;#099;&amp;#111;&amp;#109;&quot;&gt;&amp;#108;&amp;#101;&amp;#098;&amp;#114;&amp;#101;&amp;#116;&amp;#111;&amp;#110;&amp;#046;&amp;#103;&amp;#097;&amp;#098;&amp;#114;&amp;#105;&amp;#101;&amp;#108;&amp;#064;&amp;#103;&amp;#109;&amp;#097;&amp;#105;&amp;#108;&amp;#046;&amp;#099;&amp;#111;&amp;#109;&lt;/a&gt;
Date:   Tue Sep 8 21:44:29 2015 -0400&lt;/p&gt;

  &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Added useless hello.txt file (END)
&lt;/code&gt;&lt;/pre&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;

&lt;p&gt;Oh look, some informations! the commit hash is unique for every commit (&lt;a href=&quot;http://stackoverflow.com/questions/18134627/how-much-of-a-git-sha-is-generally-considered-necessary-to-uniquely-identify-a&quot;&gt;at least it should&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;Let’s say I have to write a small app with a colleague that must return all possible combinations of a list of styles and within a user interface.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;insert gamejam style generator here
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Well that’s a nice code snippet, it works from the command line, but it needs a ui. I wrote this code and my colleague didn’t touch a line of code yet; his reason: I started coding so he was waiting for me to send him the code. He says he will start working on it when I’m done. WRONG. if you’re that kind of guy, stop being that kind of guy (or girl). &lt;a href=&quot;https://en.wikipedia.org/wiki/Divide_and_conquer_algorithms&quot;&gt;Divide and conquer&lt;/a&gt;.&lt;/p&gt;

</description>
        <pubDate>Thu, 04 Jun 2015 12:00:00 -0400</pubDate>
        <link>http://gableroux.com/tutorial/2015/06/04/version-control.html</link>
        <guid isPermaLink="true">http://gableroux.com/tutorial/2015/06/04/version-control.html</guid>
        
        <category>version-control</category>
        
        <category>git</category>
        
        
        <category>tutorial</category>
        
      </item>
    
      <item>
        <title>Saltstack presentation at the SagLacIO</title>
        <description>&lt;p&gt;I gave a presentation at the &lt;a href=&quot;http://saglac.io&quot;&gt;SagLacIO&lt;/a&gt; about &lt;a href=&quot;http://saltstack.com/&quot;&gt;SaltStack&lt;/a&gt; with &lt;a href=&quot;https://www.linkedin.com/in/micael-bergeron-76ba8976&quot;&gt;Micael Bergeron&lt;/a&gt;. Here are the slides.&lt;/p&gt;

&lt;!-- more --&gt;

&lt;iframe src=&quot;https://docs.google.com/presentation/d/1JVwUZwpbWZJY6_stEKqGR1st71R7fX8HN4qVGxX1KlY/embed?start=false&amp;amp;loop=false&amp;amp;delayms=3000&quot; frameborder=&quot;0&quot; width=&quot;960&quot; height=&quot;749&quot; allowfullscreen=&quot;true&quot; mozallowfullscreen=&quot;true&quot; webkitallowfullscreen=&quot;true&quot;&gt;&lt;/iframe&gt;

</description>
        <pubDate>Wed, 03 Jun 2015 12:00:00 -0400</pubDate>
        <link>http://gableroux.com/presentation/2015/06/03/saltstack-saglacio.html</link>
        <guid isPermaLink="true">http://gableroux.com/presentation/2015/06/03/saltstack-saglacio.html</guid>
        
        <category>saglacio</category>
        
        <category>saltstack</category>
        
        
        <category>presentation</category>
        
      </item>
    
      <item>
        <title>Django Love</title>
        <description>&lt;p&gt;&lt;img src=&quot;/images/django-love.jpg&quot; alt=&quot;django-love&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Django: The Web framework for perfectionists with deadlines&lt;/p&gt;
&lt;/blockquote&gt;

&lt;!-- more --&gt;

&lt;p&gt;&lt;a href=&quot;https://djangoproject.com&quot;&gt;Django&lt;/a&gt; is an awesome &lt;a href=&quot;https://docs.djangoproject.com/en/dev/faq/general/#django-appears-to-be-a-mvc-framework-but-you-call-the-controller-the-view-and-the-view-the-template-how-come-you-don-t-use-the-standard-names&quot;&gt;mvt&lt;/a&gt; python framework that makes coding wonderful. It gets the job done in an elegant and awesome way.&lt;/p&gt;

&lt;p&gt;In this article, I will cover:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Django &lt;span class=&quot;label label-info&quot;&gt;good practices&lt;/span&gt;&lt;/li&gt;
  &lt;li&gt;Coding style&lt;/li&gt;
  &lt;li&gt;Nice tips on how to import data from an older site&lt;/li&gt;
  &lt;li&gt;I’ll show you a project I open sourced to give you a real world example (aww yeah, pull requets are welcome).&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;why-django&quot;&gt;Why django&lt;/h2&gt;

&lt;p&gt;I used to work with some web frameworks usually written in php, &lt;a href=&quot;http://symfony.com/&quot;&gt;symfony&lt;/a&gt;, &lt;a href=&quot;http://laravel.com/&quot;&gt;Laravel 4&lt;/a&gt;, &lt;a href=&quot;http://www.codeigniter.com/&quot;&gt;Code igniter&lt;/a&gt;, &lt;a href=&quot;http://cakephp.org/&quot;&gt;Cake PHP&lt;/a&gt;, &lt;a href=&quot;http://www.joomla.org/&quot;&gt;Joomla&lt;/a&gt; (better than before, but still not impressed) and &lt;a href=&quot;https://wordpress.org/&quot;&gt;Worpdress&lt;/a&gt; (last two aren’t really frameworks, wordpress may be considered a cms if you install a bunch of plugins like &lt;a href=&quot;https://wordpress.org/plugins/advanced-custom-fields/&quot;&gt;Advanced Custom Fields&lt;/a&gt; but that’s another debate). Those tools are cool and powerful, but let’s try something else than php. Learn Python and discover Django! Hard to handle at first when you’re new to python but trust me, it makes you proud of your code and it’s worth the time reading the docs as it does alot of things quickly out of the box so you’ll have more time for what’s important to solve.&lt;/p&gt;

&lt;p&gt;If you are new to programming, continue reading at your own risk. If you’re a programmer, but never used python before, you should at least read the &lt;a href=&quot;http://learnxinyminutes.com/docs/python/&quot;&gt;Learn X in Y minutes where X = python&lt;/a&gt;. Now that you’re ok with python, let’s talk about awesomeness.&lt;/p&gt;

&lt;h2 id=&quot;django-best-practice&quot;&gt;django best practice&lt;/h2&gt;

&lt;p&gt;First things first, visit &lt;a href=&quot;https://docs.djangoproject.com/en/dev/faq/&quot;&gt;django’s faq&lt;/a&gt; and make sure your &lt;a href=&quot;http://red-bean.com/~adrian/django_pronunciation.mp3&quot;&gt;pronouncing django right&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;the-basics&quot;&gt;the basics&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://docs.djangoproject.com/en/dev/&quot;&gt;Read the documentation&lt;/a&gt;&lt;/strong&gt;: Probably the most important recommendation, read everything, you’ll learn alot. Most of the things you want to accomplish with django are usually covered in the docs. Take the time and things will go blazingly fast.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Reuse code&lt;/strong&gt;: If you encounter a problem or need a solution for x problem, someone has probably already solved it. There are tons of usefull packages. Search in the right places; &lt;a href=&quot;https://pypi.python.org/pypi&quot;&gt;PyPI - the Python Package Index&lt;/a&gt; for your code and libs needs, you should also really have a look to &lt;a href=&quot;https://www.djangopackages.com/&quot;&gt;Django Packages&lt;/a&gt;. &lt;em&gt;Pro tip: &lt;a href=&quot;https://www.djangopackages.com/categories/apps/?sort=usage_count&quot;&gt;order packages by usage count&lt;/a&gt; to find the most popular packages. First ones are really great and will save you lots of headaches&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Learn by example&lt;/strong&gt;: There’s a &lt;a href=&quot;https://www.djangopackages.com/categories/projects/?sort=usage_count&quot;&gt;Projects section in Django Packages&lt;/a&gt;, read the code, find out great ideas and see how the pros work. Download examples, run them and see what’s going on.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Follow Python’s philosophy&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ python
Python 2.7.8 (default, Oct 19 2014, 16:02:00)
[GCC 4.2.1 Compatible Apple LLVM 6.0 (clang-600.0.54)] on darwin
Type &quot;help&quot;, &quot;copyright&quot;, &quot;credits&quot; or &quot;license&quot; for more information.
&amp;gt;&amp;gt;&amp;gt; import this
The Zen of Python, by Tim Peters

Beautiful is better than ugly.
Explicit is better than implicit.
Simple is better than complex.
Complex is better than complicated.
Flat is better than nested.
Sparse is better than dense.
Readability counts.
Special cases aren&#39;t special enough to break the rules.
Although practicality beats purity.
Errors should never pass silently.
Unless explicitly silenced.
In the face of ambiguity, refuse the temptation to guess.
There should be one-- and preferably only one --obvious way to do it.
Although that way may not be obvious at first unless you&#39;re Dutch.
Now is better than never.
Although never is often better than *right* now.
If the implementation is hard to explain, it&#39;s a bad idea.
If the implementation is easy to explain, it may be a good idea.
Namespaces are one honking great idea -- let&#39;s do more of those!
&amp;gt;&amp;gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Keep it simple and stupid, write clear code, write down ideas. Oh, and try importing &lt;code class=&quot;highlighter-rouge&quot;&gt;antigravity&lt;/code&gt;, it will show you how python is cool ;)&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; import antigravity
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
        <pubDate>Tue, 16 Sep 2014 12:00:00 -0400</pubDate>
        <link>http://gableroux.com/django/python/2014/09/16/django-love.html</link>
        <guid isPermaLink="true">http://gableroux.com/django/python/2014/09/16/django-love.html</guid>
        
        
        <category>django</category>
        
        <category>python</category>
        
      </item>
    
      <item>
        <title>Pelican Gruntfile</title>
        <description>&lt;p&gt;Now that I use &lt;a href=&quot;http://www.gruntjs.com/&quot;&gt;grunt, the JavaScript Task Runner&lt;/a&gt; my life has changed! It makes task automation so cool that it is a must have in every web project (and even sometime in other projects!). There’s also a great alternative called &lt;a href=&quot;http://gulpjs.com/&quot;&gt;Gulp.js&lt;/a&gt;. It is probably better if you are starting, but because I am used to Grunt, I did not move to that fancy new tool &lt;em&gt;yet&lt;/em&gt;.&lt;/p&gt;

&lt;!-- more --&gt;

&lt;h2 id=&quot;pelican-automation&quot;&gt;Pelican automation&lt;/h2&gt;

&lt;p&gt;I searched &lt;code class=&quot;highlighter-rouge&quot;&gt;pelican gruntfile&lt;/code&gt; on &lt;a href=&quot;https://duckduckgo.com/&quot;&gt;duckduckgo&lt;/a&gt; and found nothing very interesting. There is this &lt;a href=&quot;https://github.com/chuwy/grunt-pelican/&quot;&gt;grunt-pelican repo&lt;/a&gt; but it doesn’t seem to work right at the time of writing this article and its ReadMe is missing some code.&lt;/p&gt;

&lt;p&gt;Because pelican is easy to use, I decided to make my own &lt;code class=&quot;highlighter-rouge&quot;&gt;gruntfile&lt;/code&gt; instead! After around half an hour, I managed to get something interesting.&lt;/p&gt;

&lt;h3 id=&quot;how-to&quot;&gt;How to&lt;/h3&gt;

&lt;p&gt;First, create a &lt;code class=&quot;highlighter-rouge&quot;&gt;package.json&lt;/code&gt; file to save dependencies using this command:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;npm init&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Then, install the fun stuff&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;npm install --save-dev grunt-coffeelint grunt-contrib-coffee grunt-contrib-connect grunt-contrib-jshint   grunt-contrib-sass grunt-contrib-watch grunt-shell load-grunt-tasks&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Everything will be saved in your &lt;code class=&quot;highlighter-rouge&quot;&gt;package.json&lt;/code&gt;, so next time you want to install them, you only have to run &lt;code class=&quot;highlighter-rouge&quot;&gt;npm install&lt;/code&gt;. The package file will contain something like this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;&lt;span class=&quot;s2&quot;&gt;&quot;devDependencies&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;coffeelint&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;^1.5.6&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;grunt-coffeelint&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;0.0.13&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;grunt-contrib-coffee&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;^0.11.1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;grunt-contrib-connect&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;^0.8.0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;grunt-contrib-jshint&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;^0.10.0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;grunt-contrib-sass&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;^0.7.4&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;grunt-contrib-watch&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;^0.6.1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;grunt-shell&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;^0.7.0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;load-grunt-tasks&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;^0.6.0&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;the-gruntfile&quot;&gt;The Gruntfile&lt;/h3&gt;

&lt;p&gt;Here’s my awesome &lt;code class=&quot;highlighter-rouge&quot;&gt;Gruntfile.coffee&lt;/code&gt;:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-coffeescript&quot; data-lang=&quot;coffeescript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;exports&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;grunt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# Load all grunt tasks.
&lt;/span&gt;  &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&#39;load-grunt-tasks&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;grunt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;grunt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;initConfig&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# watch for files and load tasks when files change
&lt;/span&gt;    &lt;span class=&quot;na&quot;&gt;watch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;coffee&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;files&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&#39;theme/gableroux/static/js/*.coffee&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;tasks&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&#39;coffeelint&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;coffee&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;shell&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;jshint&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;files&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&#39;theme/gableroux/static/js/*.js&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;tasks&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&#39;jshint&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;shell&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;md&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;files&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&#39;content/**/*.md&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;!output&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;!node_modules&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;tasks&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&#39;shell&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;scss&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;files&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&#39;theme/gableroux/static/css/**/*.scss&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;tasks&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&#39;scss&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;shell&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;output&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;livereload&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;files&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&#39;output/**/*&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;# execute pelican to generate static files
&lt;/span&gt;    &lt;span class=&quot;na&quot;&gt;shell&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;pelican&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;command&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;pelican&quot;&lt;/span&gt;

    &lt;span class=&quot;na&quot;&gt;scss&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;expanded&#39;&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;files&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;&#39;theme/gableroux/static/css/main.css&#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;theme/gableroux/static/css/main.scss&#39;&lt;/span&gt;

    &lt;span class=&quot;na&quot;&gt;coffeelint&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;configFile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;coffeelint.json&#39;&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;all&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&#39;theme/gableroux/static/js/*.coffee&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

    &lt;span class=&quot;na&quot;&gt;jshint&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;jshintrc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;theme/gableroux/static/js/jshintrc&#39;&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;all&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&#39;theme/gableroux/static/js/*.js&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

    &lt;span class=&quot;na&quot;&gt;coffee&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;compile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;expand&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&#39;theme/gableroux/static/js/*.coffee&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;ext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;.js&#39;&lt;/span&gt;

    &lt;span class=&quot;na&quot;&gt;connect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;server&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8000&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;hostname&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;*&#39;&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;base&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;output&#39;&lt;/span&gt;

    &lt;span class=&quot;na&quot;&gt;clean&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&#39;output&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;grunt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;registerTask&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;test&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&#39;coffeelint&#39;&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# &#39;jshint&#39;
&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;# Default task when typing grunt without parameter in the cli.
&lt;/span&gt;  &lt;span class=&quot;nx&quot;&gt;grunt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;registerTask&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;default&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&#39;test&#39;&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&#39;shell&#39;&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&#39;connect&#39;&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&#39;watch&#39;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;em&gt;Note&lt;/em&gt;: make sure you have &lt;code class=&quot;highlighter-rouge&quot;&gt;pelican&lt;/code&gt; installed with &lt;code class=&quot;highlighter-rouge&quot;&gt;pip install pelican&lt;/code&gt;. Replace &lt;code class=&quot;highlighter-rouge&quot;&gt;gableroux&lt;/code&gt; with your own theme name (where your magic files are stored) and enjoy the Grunt awesomeness by running &lt;code class=&quot;highlighter-rouge&quot;&gt;grunt&lt;/code&gt; in a terminal.&lt;/p&gt;

&lt;p&gt;Here’s the &lt;code class=&quot;highlighter-rouge&quot;&gt;jshintrc&lt;/code&gt; file I used:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;esnext&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;bitwise&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;camelcase&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;curly&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;eqeqeq&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;immed&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;indent&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;latedef&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;newcap&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;noarg&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;quotmark&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;single&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;undef&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;unused&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;strict&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;trailing&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;smarttabs&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;white&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;And my &lt;code class=&quot;highlighter-rouge&quot;&gt;coffeelint.json&lt;/code&gt; file:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;indentation&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;value&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;max_line_length&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;level&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ignore&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;line_endings&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;level&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;error&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;arrow_spacing&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;level&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;error&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;space_operators&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;level&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;error&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;cyclomatic_complexity&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;level&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;error&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;empty_constructor_needs_parens&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;level&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;error&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;no_empty_param_list&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;level&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;error&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;no_unnecessary_fat_arrows&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;level&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;error&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;blockquote&gt;
  &lt;p&gt;Why coffeescript? Visit &lt;a href=&quot;http://coffeescript.org/&quot;&gt;coffeescript’s website&lt;/a&gt;, click on “try coffeescript”, copy/paste my Gruntfile.coffee and see how it is easier to read in coffee. Consider this as syntax sugar, but when it comes to &lt;a href=&quot;http://coffeescript.org/#classes&quot;&gt;extending javascript classes&lt;/a&gt;, I really prefer using coffeescript.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;the-fun-part&quot;&gt;The fun part&lt;/h2&gt;
&lt;p&gt;Now, when I write new content in markdown files, or when I edit my theme, my browser &lt;strong&gt;automagically&lt;/strong&gt; refresh my website using &lt;a href=&quot;https://chrome.google.com/webstore/detail/livereload/jnihajbhpnppcggbcgedagnkighmdlei&quot;&gt;LiveReload Chrome Extension&lt;/a&gt; on my second screen. Having a workflow updating like this lets me write quality content (can you confirm this?), instead of running a bunch of scripts manually every time only to fix a typo on a blog post.&lt;/p&gt;

&lt;p&gt;Grunt rocks.&lt;br /&gt;
Enjoy&lt;/p&gt;

&lt;h2 id=&quot;september-2015-edit&quot;&gt;September 2015 edit&lt;/h2&gt;

&lt;p&gt;You should use &lt;a href=&quot;http://www.browsersync.io/&quot;&gt;Browser Sync&lt;/a&gt; instead, it’s even more awesome!&lt;/p&gt;

</description>
        <pubDate>Sun, 17 Aug 2014 12:00:00 -0400</pubDate>
        <link>http://gableroux.com/pelican/grunt/gruntfile/coffeescript/2014/08/17/pelican-gruntfile.html</link>
        <guid isPermaLink="true">http://gableroux.com/pelican/grunt/gruntfile/coffeescript/2014/08/17/pelican-gruntfile.html</guid>
        
        
        <category>Pelican</category>
        
        <category>grunt</category>
        
        <category>gruntfile</category>
        
        <category>coffeescript</category>
        
      </item>
    
      <item>
        <title>Hello Pelican</title>
        <description>&lt;p&gt;Hi there,&lt;br /&gt;
Welcome to my blog. This is my first post (in fact, it’s my second). I first attempted to create my blog with &lt;a href=&quot;http://wagtail.io/&quot;&gt;wagtail&lt;/a&gt; but I had a &lt;a href=&quot;http://stackoverflow.com/questions/24976561/wagtail-pages-giving-none-url-with-live-status&quot;&gt;blocking issue&lt;/a&gt;. &lt;em&gt;Edit: problem solved, but I’m happy with pelican!&lt;/em&gt; Anyway, I’m glad you’re here, I made a branch and moved my work to &lt;a href=&quot;http://blog.getpelican.com/&quot;&gt;Pelican&lt;/a&gt;.&lt;/p&gt;

&lt;!-- more --&gt;

&lt;p&gt;It’s probably more conveniant for my simple website. I can’t tell alot about pelican as I did not play much with it yet, but it seems very easy to work with. Oh and I love writing in &lt;code class=&quot;highlighter-rouge&quot;&gt;markdown&lt;/code&gt;, that’s probably because of Github ReadMe files Eh.&lt;/p&gt;

&lt;h2 id=&quot;pelican&quot;&gt;Pelican&lt;/h2&gt;

&lt;p&gt;Here’s how I got started with &lt;code class=&quot;highlighter-rouge&quot;&gt;pelican&lt;/code&gt; running &lt;code class=&quot;highlighter-rouge&quot;&gt;$ pelican-quickstart&lt;/code&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;pelican-quickstart
Welcome to pelican-quickstart v3.4.0.

This script will help you create a new Pelican-based website.

Please answer the following questions so this script can generate the files
needed by Pelican.

&amp;gt; Where do you want to create your new web site? [.]
&amp;gt; What will be the title of this web site? GabLeRoux
&amp;gt; Who will be the author of this web site? GabLeRoux
&amp;gt; What will be the default language of this web site? [en]
&amp;gt; Do you want to specify a URL prefix? e.g., http://example.com   (Y/n) y
&amp;gt; What is your URL prefix? (see above example; no trailing slash) http://www.gableroux.com
&amp;gt; Do you want to enable article pagination? (Y/n) y
&amp;gt; How many articles per page do you want? [10] 5
&amp;gt; Do you want to generate a Fabfile/Makefile to automate generation and publishing? (Y/n) y
&amp;gt; Do you want an auto-reload &amp;amp; simpleHTTP script to assist with theme and site development? (Y/n) y
&amp;gt; Do you want to upload your website using FTP? (y/N) n
&amp;gt; Do you want to upload your website using SSH? (y/N) y
&amp;gt; What is the hostname of your SSH server? [localhost] gableroux.com
&amp;gt; What is the port of your SSH server? [22]
&amp;gt; What is your username on that server? [root] ***************
&amp;gt; Where do you want to put your web site on that server? [/var/www] *********************
&amp;gt; Do you want to upload your website using Dropbox? (y/N) n
&amp;gt; Do you want to upload your website using S3? (y/N) n
&amp;gt; Do you want to upload your website using Rackspace Cloud Files? (y/N) n
&amp;gt; Do you want to upload your website using GitHub Pages? (y/N) n
Done. Your new project is available at *******/***/********/*****
�F�&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Ok so not quite sure about that last line, but my stuff is ready to go now :). Thanks to the &lt;a href=&quot;http://docs.getpelican.com/en/&quot;&gt;documentation&lt;/a&gt;, it’s very well explained and easy to follow.&lt;/p&gt;

&lt;h3 id=&quot;plugins&quot;&gt;Plugins!&lt;/h3&gt;

&lt;p&gt;Now that my site is up and running, I’ll need to try the &lt;a href=&quot;https://github.com/getpelican/pelican-plugins&quot;&gt;plugins&lt;/a&gt;. I’m only using the &lt;code class=&quot;highlighter-rouge&quot;&gt;sitemap&lt;/code&gt; plugin atm thow :P&lt;/p&gt;

&lt;h3 id=&quot;themes&quot;&gt;Themes!&lt;/h3&gt;

&lt;p&gt;If you’re reading this post, you see the theme I made. If you want to create your own theme, that’s easy! have a look at &lt;a href=&quot;https://github.com/getpelican/pelican-themes&quot;&gt;pelican-themes&lt;/a&gt; on GitHub.&lt;/p&gt;

&lt;p&gt;You can then insert this in your pelican settings:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;    THEME &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;/home/user/pelican-themes/theme-name&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;whats-next&quot;&gt;What’s next&lt;/h2&gt;

&lt;p&gt;There’s not much on my site right now, but I’ll keep updating this place by posting cool stuff. I’ll be using &lt;a href=&quot;https://disqus.com/&quot;&gt;Disqus&lt;/a&gt; on this site so feel free to comment and talk about stuff. I have a small &lt;a href=&quot;/todo.html&quot;&gt;todo list here&lt;/a&gt;, I’ll add some things to fix here and there and will note some articles and apps to talk about ^^.&lt;/p&gt;

</description>
        <pubDate>Sun, 27 Jul 2014 11:00:00 -0400</pubDate>
        <link>http://gableroux.com/pelican/hello-world/2014/07/27/hello-pelican.html</link>
        <guid isPermaLink="true">http://gableroux.com/pelican/hello-world/2014/07/27/hello-pelican.html</guid>
        
        
        <category>Pelican</category>
        
        <category>hello-world</category>
        
      </item>
    
      <item>
        <title>Meteorjs introduction presentation at the SagLacIO</title>
        <description>&lt;p&gt;I gave a presentation at the &lt;a href=&quot;http://saglac.io&quot;&gt;SagLacIO&lt;/a&gt; about &lt;a href=&quot;https://www.meteor.com/&quot;&gt;Hubot&lt;/a&gt;. Here are the slides.&lt;/p&gt;

&lt;!-- more --&gt;

&lt;p&gt;Can be found at the following url:
https://meteor.gableroux.com/&lt;/p&gt;

&lt;p&gt;&lt;em&gt;todo: embed this right here&lt;/em&gt;
&lt;em&gt;todo: fix the slides, subdomain is down eh&lt;/em&gt;&lt;/p&gt;

</description>
        <pubDate>Mon, 09 Dec 2013 19:00:00 -0500</pubDate>
        <link>http://gableroux.com/presentation/2013/12/09/meteor-saglacio.html</link>
        <guid isPermaLink="true">http://gableroux.com/presentation/2013/12/09/meteor-saglacio.html</guid>
        
        <category>saglacio</category>
        
        <category>meteor</category>
        
        
        <category>presentation</category>
        
      </item>
    
  </channel>
</rss>
